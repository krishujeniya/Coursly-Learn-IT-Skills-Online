name: PHP Composer CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    services:
      apache:
        image: php:apache
        ports:
          - 80:80
        options: >-
          --health-cmd "curl --fail http://localhost || exit 1"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 3
        volumes:
          - ./:/var/www/html
        # Docker setup with PHP extensions
        entrypoint: >
          sh -c "docker-php-ext-install mysqli pdo pdo_mysql &&
                 docker-php-ext-enable mysqli &&
                 apache2-foreground"

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup PHP with extensions
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2' # or your preferred version
        extensions: mysqli, pdo, pdo_mysql
        coverage: none

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-suggest

    # Optional: Run tests (uncomment if applicable)
    # - name: Run test suite
    #   run: composer run-script test
